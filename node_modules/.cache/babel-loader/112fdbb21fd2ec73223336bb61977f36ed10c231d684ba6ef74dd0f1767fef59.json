{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel N\\\\Desktop\\\\PruebasFlask\\\\ReactFlask\\\\client\\\\src\\\\MyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    // inicializa el estado con los campos del formulario\n    // por ejemplo: name, email, etc.\n    name: \"\",\n    email: \"\"\n  });\n  const handleChange = e => {\n    // actualiza el estado cuando cambia algún campo del formulario\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Aquí puedes enviar los datos al servidor Flask\n    // Puedes usar fetch o axios para realizar la solicitud POST\n\n    fetch('/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      // maneja la respuesta del servidor si es necesario\n      console.log(data);\n    }).catch(error => {\n      console.error('Error al enviar los datos:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"row\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Name\",\n        \"aria-label\": \"Name\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        placeholder: \"email\",\n        \"aria-label\": \"email\",\n        name: \"email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Envia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"oDRi1A+zVXsVx7EEgE+kk9g6yME=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MyForm","_s","formData","setFormData","name","email","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Daniel N/Desktop/PruebasFlask/ReactFlask/client/src/MyForm.js"],"sourcesContent":["import React, {useState } from 'react';\r\n\r\nconst MyForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    // inicializa el estado con los campos del formulario\r\n    // por ejemplo: name, email, etc.\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    // actualiza el estado cuando cambia algún campo del formulario\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Aquí puedes enviar los datos al servidor Flask\r\n    // Puedes usar fetch o axios para realizar la solicitud POST\r\n\r\n    fetch('/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // maneja la respuesta del servidor si es necesario\r\n        console.log(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al enviar los datos:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form className='row' onSubmit={handleSubmit}>\r\n      <div className='col'>\r\n        <input type='text' className='form-control' placeholder='Name' aria-label='Name' name='name' onChange={handleChange}></input>\r\n      </div>\r\n      <div className='col'>\r\n        <input type='email' className='form-control' placeholder='email' aria-label='email' name='email' onChange={handleChange}></input>\r\n      </div>\r\n      <div className='col'>\r\n        <input type='submit' value={\"Envia\"}></input>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvC;IACA;IACAO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACAJ,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACK,CAAC,CAACC,MAAM,CAACJ,IAAI,GAAGG,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;;IAElB;IACA;;IAEAC,KAAK,CAAC,MAAM,EAAE;MACZC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACf,QAAQ;IAC/B,CAAC,CAAC,CACCgB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EAED,oBACE1B,OAAA;IAAM2B,SAAS,EAAC,KAAK;IAACC,QAAQ,EAAEjB,YAAa;IAAAkB,QAAA,gBAC3C7B,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAE,QAAA,eAClB7B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAACH,SAAS,EAAC,cAAc;QAACI,WAAW,EAAC,MAAM;QAAC,cAAW,MAAM;QAAC1B,IAAI,EAAC,MAAM;QAAC2B,QAAQ,EAAEzB;MAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1H,CAAC,eACNpC,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAE,QAAA,eAClB7B,OAAA;QAAO8B,IAAI,EAAC,OAAO;QAACH,SAAS,EAAC,cAAc;QAACI,WAAW,EAAC,OAAO;QAAC,cAAW,OAAO;QAAC1B,IAAI,EAAC,OAAO;QAAC2B,QAAQ,EAAEzB;MAAa;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9H,CAAC,eACNpC,OAAA;MAAK2B,SAAS,EAAC,KAAK;MAAAE,QAAA,eAClB7B,OAAA;QAAO8B,IAAI,EAAC,QAAQ;QAACpB,KAAK,EAAE;MAAQ;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAClC,EAAA,CAjDID,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAmDZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}