{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel N\\\\Desktop\\\\PruebasFlask\\\\ReactFlask\\\\client\\\\src\\\\MyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    // inicializa el estado con los campos del formulario\n    // por ejemplo: name, email, etc.\n    name: \"\",\n    email: \"\"\n  });\n  const handleChange = e => {\n    // actualiza el estado cuando cambia algún campo del formulario\n    console.log(e.target.name);\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Aquí puedes enviar los datos al servidor Flask\n    // Puedes usar fetch o axios para realizar la solicitud POST\n\n    fetch('/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      // maneja la respuesta del servidor si es necesario\n      console.log(data);\n    }).catch(error => {\n      console.error('Error al enviar los datos:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: formData.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"oDRi1A+zVXsVx7EEgE+kk9g6yME=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyForm","_s","formData","setFormData","name","email","handleChange","e","console","log","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Daniel N/Desktop/PruebasFlask/ReactFlask/client/src/MyForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst MyForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    // inicializa el estado con los campos del formulario\r\n    // por ejemplo: name, email, etc.\r\n    name: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    // actualiza el estado cuando cambia algún campo del formulario\r\n    console.log(e.target.name);\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Aquí puedes enviar los datos al servidor Flask\r\n    // Puedes usar fetch o axios para realizar la solicitud POST\r\n\r\n    fetch('/add', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // maneja la respuesta del servidor si es necesario\r\n        console.log(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error al enviar los datos:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Input fields y otros elementos del formulario */}\r\n      <input type=\"text\" name=\"name\" value={formData.name} onChange={handleChange} />\r\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleChange} />\r\n      {/* Otros campos del formulario */}\r\n      <button type=\"submit\">Enviar</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MyForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvC;IACA;IACAO,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B;IACAC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACN,IAAI,CAAC;IAC1BD,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACK,CAAC,CAACG,MAAM,CAACN,IAAI,GAAGG,CAAC,CAACG,MAAM,CAACC;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAIL,CAAC,IAAK;IAC1BA,CAAC,CAACM,cAAc,CAAC,CAAC;;IAElB;IACA;;IAEAC,KAAK,CAAC,MAAM,EAAE;MACZC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjB,QAAQ;IAC/B,CAAC,CAAC,CACCkB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAf,OAAO,CAACC,GAAG,CAACc,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdjB,OAAO,CAACiB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;EAED,oBACE1B,OAAA;IAAM2B,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAE3B5B,OAAA;MAAO6B,IAAI,EAAC,MAAM;MAACxB,IAAI,EAAC,MAAM;MAACO,KAAK,EAAET,QAAQ,CAACE,IAAK;MAACyB,QAAQ,EAAEvB;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/ElC,OAAA;MAAO6B,IAAI,EAAC,OAAO;MAACxB,IAAI,EAAC,OAAO;MAACO,KAAK,EAAET,QAAQ,CAACG,KAAM;MAACwB,QAAQ,EAAEvB;IAAa;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElFlC,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAChC,EAAA,CA9CID,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}